\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1.}Date: 20/4/2017}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..1}Show player name, team id,stadium and mdate for every german player.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..2}Show team1,team2, and player for every goal scored by a player called 'Mario'.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..3}Show player, teamid, coach, gtime for all goals scored in the first 10 minutes.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..4}List the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..5}List the player for every goal scored in a game whre the stadium was 'National Stadium, Warsaw'.}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..6}Show the name of the player who scored a goal against Germany('GER').}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1..7}Show the stadium and the number of goals scored in each stadium. Use count().}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {2.}Date: 27/4/2017}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2..1}Show the matchdate,stadium,player name,goal time for match ids 1019 and 1021.}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2..2}Show all the goal time,player, stadium where first team was Germany.}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2..3}Show the matchdate,stadium,teamname where Diego Maradona was the coach. Use right join.}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2..4}Show id,matchdate,stadium,coach and team name for all team2. Use full outer join.}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {3.}Date: 27/4/2017}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3..1}Show employee name and Manager name for Employee ID 4 and 6.}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3..2}Show the entire list of employee name and employee id under manager "Palash Roy".}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {4.}Write a program to compare two strings by overloading the '==' operator.}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {5.}Write a program to create a class account that stores customer name, account number and type of account. Create two more classes for current a/c and savings a/c. The current a/c will have:\\$*$cheque facility, \\$*$ minimum balance and deduction for balance below that,\\$*$deposit and withdrawal. The saving a/c will have similar member methods, except for cheque and minimum balance, it will have an interest calculation. Do not use constructors.}{13}}
\@writefile{toc}{\contentsline {section}{\numberline {6.}Rewrite the above program using constructors.}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {7.} An educational institution wishes to maintain a database of its employees. The database is divided into a number of classes whose hierarchical relationships are shown in figure below. The figure also shows the minimum information required for each class. Specify all the classes and define functions to create the database and retrieve individual information as and when required.}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {8.}Consider a class network as shown below. Define all four classes and write a program to create, update and display the information contained in master objects.}{19}}
\@writefile{toc}{\contentsline {section}{\numberline {9.}Write a program demonstrating overriding using 'virtual'.}{20}}
\@writefile{toc}{\contentsline {section}{\numberline {10.}Write a program implementing Shape class, from which Triangle and Rectangle inherit. Use 'virtual'}{21}}
\@writefile{toc}{\contentsline {section}{\numberline {11.}Rewrite the previous program without using 'virtual'.}{22}}
\@writefile{toc}{\contentsline {section}{\numberline {12.}Write a function template for finding the minimum value contained in an array.}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {13.}Write a program containing a possible exception. Perform exception handling with multiple catch.}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {14.}Write a program to demonstrate the concept of rethrowing an exception.}{24}}
\@writefile{toc}{\contentsline {section}{\numberline {15.}Write a class template to represent a generic vector. Include member functions to perform the following taks:\\$*$ to create a vector\\$*$ to modify the value of a given element\\$*$ to multiply by a scalar.}{25}}
